{"ast":null,"code":"const faunadb = require('faunadb'); // your secret hash\n\n\nconst secret = process.env.FAUNADB_SECRET_KEY;\nconst q = faunadb.query;\nconst client = new faunadb.Client({\n  secret\n});\n\nmodule.exports = async (req, res) => {\n  console.log('secret: ', secret);\n\n  try {\n    const dbs = await client.query(q.Map( // iterate each item in result\n    q.Paginate( // make paginatable\n    q.Match( // query index\n    q.Index('all_customers') // specify source\n    )), ref => q.Get(ref) // lookup each result by its reference\n    )); // ok\n\n    res.status(200).json(dbs.data);\n  } catch (e) {\n    // something went wrong\n    res.status(500).json({\n      error: e.message\n    });\n  }\n};","map":{"version":3,"sources":["/Users/william.brinkert/Desktop/Code/Personal_Projects/faunadb-demo/pages/api/index.js"],"names":["faunadb","require","secret","process","env","FAUNADB_SECRET_KEY","q","query","client","Client","module","exports","req","res","console","log","dbs","Map","Paginate","Match","Index","ref","Get","status","json","data","e","error","message"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB,C,CAEA;;;AACA,MAAMC,MAAM,GAAGC,OAAO,CAACC,GAAR,CAAYC,kBAA3B;AACA,MAAMC,CAAC,GAAGN,OAAO,CAACO,KAAlB;AACA,MAAMC,MAAM,GAAG,IAAIR,OAAO,CAACS,MAAZ,CAAmB;AAAEP,EAAAA;AAAF,CAAnB,CAAf;;AAGAQ,MAAM,CAACC,OAAP,GAAiB,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AACnCC,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBb,MAAxB;;AACA,MAAI;AACF,UAAMc,GAAG,GAAG,MAAMR,MAAM,CAACD,KAAP,CAChBD,CAAC,CAACW,GAAF,EACE;AACAX,IAAAA,CAAC,CAACY,QAAF,EACE;AACAZ,IAAAA,CAAC,CAACa,KAAF,EACE;AACAb,IAAAA,CAAC,CAACc,KAAF,CAAQ,eAAR,CAFF,CAE2B;AAF3B,KAFF,CAFF,EASEC,GAAG,IAAIf,CAAC,CAACgB,GAAF,CAAMD,GAAN,CATT,CASoB;AATpB,KADgB,CAAlB,CADE,CAcF;;AACAR,IAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBR,GAAG,CAACS,IAAzB;AACD,GAhBD,CAgBE,OAAOC,CAAP,EAAU;AACV;AACAb,IAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACG,MAAAA,KAAK,EAAED,CAAC,CAACE;AAAV,KAArB;AACD;AACF,CAtBD","sourcesContent":["const faunadb = require('faunadb');\n\n// your secret hash\nconst secret = process.env.FAUNADB_SECRET_KEY\nconst q = faunadb.query\nconst client = new faunadb.Client({ secret })\n\n\nmodule.exports = async (req, res) => {\n  console.log('secret: ', secret);\n  try {\n    const dbs = await client.query(\n      q.Map(\n        // iterate each item in result\n        q.Paginate(\n          // make paginatable\n          q.Match(\n            // query index\n            q.Index('all_customers') // specify source\n          )\n        ),\n        ref => q.Get(ref) // lookup each result by its reference\n      )\n    )\n    // ok\n    res.status(200).json(dbs.data)\n  } catch (e) {\n    // something went wrong\n    res.status(500).json({error: e.message})\n  }\n}\n\n"]},"metadata":{},"sourceType":"script"}